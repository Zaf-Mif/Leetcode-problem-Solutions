# Problem: Split Array Largest Sum - https://leetcode.com/problems/split-array-largest-sum/

bool isValid(const vector<int>& nums, int k, int valid) {
    int kk = 1 , store = 0;
    for (int weight : nums ){
        if (store + weight <= valid){
            store += weight;
        }
        else{
            kk++;
            store = weight;
        }
    }
    return kk <= k;
}
class Solution {
public:
    int splitArray(vector<int>& nums, int k) {
         int low = *max_element(nums.begin(), nums.end());
        int high = accumulate(nums.begin() , nums.end(), 0 ) , mid , ans;

        while(low <= high){
            mid = low + (high - low) / 2;

            if (isValid(nums , k ,mid)){
                ans = mid;
                high = mid - 1;
            }
            else{
                low = mid + 1;
            }
        }

        return ans;
    }
    
};