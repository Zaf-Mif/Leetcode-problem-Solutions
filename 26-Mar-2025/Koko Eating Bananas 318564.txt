# Problem: Koko Eating Bananas - https://leetcode.com/problems/koko-eating-bananas/

bool isValid(const vector<int>& piles, int h, int valid) {
    long long k= 0 ;
    for (int pile : piles ){
        long long arr  = (pile / valid);
        k += arr;
        if (pile % valid != 0){
            k += 1;
        }
    }
    return k <= h;
}


class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {
        int high = *max_element(piles.begin(), piles.end()) , low = 1 , ans = high , mid;
        while(low <= high){
           long long  mid = low + (high -(long long) low) / 2LL;
            if (isValid(piles , h , mid)){
                ans = mid ;
                high = mid - 1;
            }
            else{
                low = mid + 1;
            }
        }
        return ans;

    }
};